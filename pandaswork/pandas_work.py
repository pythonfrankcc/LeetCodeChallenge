# -*- coding: utf-8 -*-
"""pandas-work.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SeFjUi2iSChdBy0gAoJ8_WgbxrbFfTwg
"""

# This Python 3 environment comes with many helpful analytics libraries installed
# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python
# For example, here's several helpful packages to load

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

# Input data files are available in the read-only "../input/" directory
# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using "Save & Run All" 
# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session





#Code task

#importing necessary dependencies
import pandas as pd
import matplotlib.pyplot as plt


#reading the data from a url
url = "http://service.scedc.caltech.edu/ftp/catalogs/SCEC_DC/1932.catalog"
df = pd.read_csv(url , delim_whitespace=True, skiprows=9)


#looking at the head of the dataframe(first 5 rows)
df.head()

#checking the column types of the data frame
df.dtypes


#test function for sorting dataframe into categorical and numerical data
#def sorted_dataframe:
#    cat = []
#    for column in (df.columns):
#        if (df[column].dtype) == object:
#            cat.append(column)
#    sorted_category = sorted(cat)

"""From above we can see that the dataset has both categorical and numerical variables"""

#function for sorting the dataframe into categorical and numerical data that is sorted by the column names
#the creation of the functoion is incase this is done on a repetition, with the snake case used in accordance to PEP8
def sorted_dataframe(df):
    categorical = []
    numerical = []
    for column in (df.columns):
        if(df[column].dtype) == object:
            categorical.append(column)
        else:
            numerical.append(column)
    sorted_categorical = sorted(categorical)
    sorted_numerical = sorted(numerical)

#sorting the data in our case since this is a one off
categorical = []
numerical = []
for column in (df.columns):
    if (df[column].dtype) == object:
        categorical.append(column)
    else:
        numerical.append()
sorted_categorical = sorted(categorical)
sorted_numerical = sorted(numerical)

#recreate the dataframe since the sorted_categorical and sorted_numerical gives a list of the column names
df_categorical = df[sorted_categorical]
df_numerical = df[sorted_numerical]

#combine the sorted dataframe by having categorical data first
frames = [df_categorical, df_numerical]
df_combined = pd.concat(frames,axis=1)
df_combined.head()

#showing the data type of each column as a summary
df_combined.dtypes

#creating graphs in matplotlib
#1) Here is just an example of a graph on the NPH column
# setting the ranges and no. of intervals
range = (0, 100)
bins = 10
plt.hist(df_combined['NPH'], bins, range, color = 'green',
        histtype = 'bar', rwidth = 0.8)
# function to show the plot
plt.show()

#attempt at trying to use the pandas.read_html() method
#For tabular data from a url as directed by the question find a suitable url like so
df_list = pd.read_html( "https://ourworldindata.org/ofdacred-international-disaster-data")[1]
df_list.dtypes
df_list.head()